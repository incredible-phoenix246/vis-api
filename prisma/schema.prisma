generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id                      String         @id @default(cuid())
  fullName                String
  email                   String         @unique
  phoneNumber             String         @unique
  otp                     String?
  otpExpires              DateTime?
  createdAt               DateTime?      @default(now())
  updatedAt               DateTime       @updatedAt
  password                String?
  referralCode            String?
  referredById            String?
  referredBy              User?          @relation("UserReferredBy", fields: [referredById], references: [id])
  referrals               User[]         @relation("UserReferredBy")
  referralsMade           Referral[]
  verified                Boolean        @default(false)
  accountType             String         @default("user")
  sentMessages            Message[]      @relation("SentMessages")
  receivedMessages        Message[]      @relation("ReceivedMessages")
  conversationsAsSender   Conversation[] @relation("SenderConversations")
  conversationsAsReceiver Conversation[] @relation("ReceiverConversations")
  Order                   Order[]

  @@map("User")
}

model Referral {
  id     Int    @id @default(autoincrement())
  code   String @unique
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@map("Referral")
}

model Conversation {
  id         String    @id @default(cuid())
  senderId   String
  receiverId String
  messages   Message[]
  sender     User      @relation("SenderConversations", fields: [senderId], references: [id])
  receiver   User      @relation("ReceiverConversations", fields: [receiverId], references: [id])

  @@map("Conversation")
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String
  createdAt      DateTime     @default(now())
  senderId       String
  receiverId     String
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  sender         User         @relation("SentMessages", fields: [senderId], references: [id])
  receiver       User         @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@map("Message")
}

model Order {
  id             String  @id @default(cuid())
  pickupname     String
  pickupaddress  String
  pickupphone    String
  pickupitem     String
  weight         String?
  deliverymode   String
  note           String?
  dropoffname    String
  dropoffaddress String
  dropoffphone   String
  deliverytype   String
  insurance      Boolean @default(false)
  owner          User    @relation(fields: [userId], references: [id])
  userId         String
}
